{
  "site.main": {
    "components": "компоненты",
    "docs": "документация",
    "samples": "образцы",
    "about": "около",
    "languageTitle": "язык"
  },
  "site.Welcome": {
    "headerText": "компоненты пользовательского интерфейса построен на вершине",
    "welcome": "добро пожаловать",
    "welcomeText": "Это страница документации для халата реагирующими-интерфейса. Вы можете найти компоненты с кодами образцов, JSDocs и общие сведения о проекте.",
    "dataGrid": "DataGrid с поддержкой модели",
    "dataGridText": "Модели с поддержкой динамической проверки, делает его очень легко разрабатывать экраны для CRUD операций и more.Filters, сортировка, формообразования из моделей и многое другое.",
    "standartUsage": "Унифицированная использование",
    "standartUsageText": "Важно, чтобы обеспечить полный и простой в освоении компонентов set.Harmonic использование различных компонентов, обернутых вместе с одним наименовании и один из способов использования.",
    "readyForComplexNeeds": "Готов для сложных потребностей",
    "readyForComplexNeedstext": "Мы разрабатываем реальные проекты с этой библиотекой, поэтому мы добавим компоненты и образцы задачу continuously.Complex будет легче выполнить с образцами из реальных приложений.",
    "bootstrapSupport": "Bootstrap Поддержка",
    "bootstrapSupportText": "Мы поддерживаем бутстраповских компоненты, обернув",
    "chartingSupport": "Контуры Поддержка",
    "chartingSupportText": "Мы поддерживаем область, Бар, линия, пирог, радар и другую схему компонентов, обернув",
    "footer": "Этот проект находится в бета-состоянии, может содержать ошибки."
  },
  "sampleprojects.SampleProjects": {
    "title": "образцы",
    "header": "Ниже представлен список примеров приложений, разработанных с халата реагирующими-ш."
  },
  "buttons.ButtonSample": {
    "buttonNormal": "Кнопка (с нормальным поведением)",
    "async": "индукционный",
    "buttonAsync": "Кнопка (с асинхронным поведением)",
    "forMoreLink": "Для получения дополнительной React-Bootstrap Кнопка"
  },
  "inputs.InputSample": {
    "descOne": "Прежде всего, почему документ, как это? потому что у нас есть 3 важные вещи, чтобы объяснить о OnChange.",
    "listItemOne": "Имя поля события",
    "listItemTwo": "Значение поля события",
    "listItemThree": "parsedValue поле события",
    "descTwo": "Это поле выставиться для исполнения в виду. Каждое поле ввода устанавливает имя проп (от компонента реквизита) до OnChange событий. DataForm делает это автоматически, используя поле имени модели JSON.",
    "descSubOne": "Если разработчик хочет один метод изменения, он / она должна связать метод ко всем полям ввода в конструкторе / визуализации для того, чтобы определить источник события изменения.",
    "descSubTwo": "Как вы видите his.onChange.bind (неопределенными, TextInput1) приносит накладные расходы во время выполнения. Это также может быть сделано в конструкторе это лучше, но недостаточно",
    "descSubThree": "Таким образом, путем присвоения имен пропеллер мы можем написать лучшее решение. Все письменные поля ввода направит это свойство к событию. Он будет доступен через e.target.name.",
    "descThree": "Это поле всегда несет строковое представление значения входов. Вот почему мы обычно получаем значение по",
    "tableTitle": "Для быстрого примера, пожалуйста, взгляните на следующую таблицу.",
    "tableHeaderOne": "Компонент",
    "tableHeaderTwo": "value",
    "tableHeaderThree": "parsedValue"
  },
  "toast.ToastSample": {
    "infoMessage": "Информационное сообщение",
    "successMessage": "сообщение об успешном выполнении",
    "successTitle": "Название здесь",
    "warningMessage": "Предупреждающее сообщение",
    "warningDesc": "Закрыть после 3000ms",
    "errorMessage": "Сообщение об ошибке",
    "errorTitle": "Нажми на меня!",
    "callback": "Перезвони",
    "topRight": "Сверху и справа",
    "topLeft": "Сверху и слева",
    "bottomRight": "Снизу и справа",
    "bottomLeft": "Вниз и слева",
    "paragraph": "Тост  имеют успех, информация, предупреждения об ошибках и функции.",
    "paragraphTwo": "Также вы можете настроить рассчитывать максимальные видимые уведомления.",
    "numericLabel": "Макс Видимый Count (по умолчанию составляет не более безопасное целое число)",
    "radioLabel": "позиции",
    "success": "успех",
    "info": "Информация",
    "warning": "Предупреждение",
    "error": "ошибка"
  },
  "i18n.I18n": {
    "mainDesc": "Robe проекты поддерживает i18n с помощью простого API. На этой странице описывается, как использовать его и дать простой sample.You может переводить тексты по умолчанию из библиотеки или определить собственную texts.First всего создать файл i18n. Файл i18n является одним из основных JSON-файл с правильными keys.These ключи будут переопределять тексты по умолчанию или создать новую запись. Есть 2 вида использования",
    "headerOne": "1.\"robe-react-commons/lib/application/Application\"",
    "descOne": "Это использование ядро API. Таким образом, после загрузки нашего файла i18n в \"Application \" будет usable.From Теперь вы можете Acces все ваши тексты с \"Application.i18n (<Class>, <Code> ...) \". Это будет дать вам string.If вы используете i18n в defaultProps класса вы всегда должны дать \"Class \" и \"codes \" должны иметь одинаковую структуру и наименования с defaultProps",
    "descOnePlus": "To use parameterized texts you can define your texts like  \"${minValue}\" and then it will be replacable by  \"es6-template-strings\" library.",
    "descOnePlusSub": "Как вы можете видеть из кода он будет печатать сначала необходимо заполнить Это поле.",
    "descOnePlusSubSub": "Чем он будет печатать Значение должно быть больше или равно 3",
    "headerTwo": "2. \"robe-react-ui/lib/Application\"",
    "descTwo": "Это простой способ использовать api.If вы обернуть ваш удаленный компонент с \"<Application language=...>\" язык будет доступен через \"language \" prop.This реквизита будут храниться в куки в случай страницы refresh.When вы измените пропеллер это вызовет ряд операций.",
    "descTwoListOne": "Он будет принимать как JSON или путь.",
    "descTwoListTwo": "Она будет загружать данные и установить его в приложение из общего достояния.",
    "descTwoListThree": "Все defaultProps компонентов будут отсканированы и заменены.",
    "descTwoListFour": "\"Application \" будет перемонтировать себя, чтобы сделать изменения видимыми.",
    "descTwoPlus": "Теперь вы можете получить доступ ко всем ваши тексты с \"Application.i18n(<Class>,<code>...) \". Это даст вам строку."
  },
  "addon.InputAddon": {
    "paragraphOne": "Вы можете использовать \"addons \" свойство, чтобы показать дополнительные компоненты в пределах ваших компонентов inputs.All, который оборачивает \"BaseInput \" примет свойства \"inputGroupLeft \" и \"inputGroupRight \" properties.You можно найти подробное использование от",
    "textOne": "Пример 1 (Текст слева)",
    "textOneSub": "Текст слева",
    "textTwo": "Пример 2 (Текст справа)",
    "textTwoSub": "Текст справа",
    "textThree": "Пример 3 (иконка слева)",
    "textFour": "Пример 4 (иконка справа)",
    "desc": "Вы можете добавить все, что вы хотите, окружив свой компонент с \"InputGroup.Addon \" или с эквивалентным компонентом."
  },
  "store.StoreSample": {
    "spanOne": "PropTypes",
    "spanTwo": "Default props.",
    "spanThree": "Вы можете выполнить с теми же настройками для \"создание, чтение, обновление, удаление \".",
    "spanFour": "\"Создать \" метод должен быть вызван, чтобы выполнить запрос на создание.",
    "spanFive": "\"Чтения \" метод должен быть вызван, чтобы выполнить запрос на чтение.",
    "spanSix": "Метод \"обновление \" должен быть вызван, чтобы выполнить запрос на обновление.",
    "spanSeven": "\"Удалить \" метод должен быть вызван для выполнения удаления запроса."
  },
  "endpoint.RemoteEndPointSample": {
    "spanOne": "Вы можете выполнить с теми же настройками для \"создание, чтение, обновление, удаление \".",
    "spanTwo": "Параметры Аякса могут быть заданы отдельно для \"создание, чтение, обновление, удаление \".",
    "spanThree": "\"Создать \" метод должен быть вызван, чтобы выполнить запрос на создание.",
    "spanFour": "\"Чтения \" метод должен быть вызван, чтобы выполнить запрос на чтение.",
    "spanFive": "Метод \"обновление \" должен быть вызван, чтобы выполнить запрос на обновление.",
    "spanSix": "\"Удалить \" метод должен быть вызван для выполнения удаления запроса.",
    "spanSeven": "Вызов текущего URL."
  },
  "error.NotFound": {
    "message": "404 Страница не найдена"
  },
  "ajaxrequest.AjaxRequestSample": {
    "spanOne": "Вы можете определить \"Ajax запроса \" следующим образом",
    "spanTwo": "Все настройки не являются обязательными. По умолчанию может быть установлен в качестве опции. Опции по умолчанию следующим образом.",
    "spanThree": "Метод \"Вызов \" должен быть вызван, чтобы выполнить запрос.",
    "spanFour": "Вы можете надуть следующий пример"
  },
  "validation.ValidationSample": {
    "exampleOneBlock": "Пример 1 (Блок дисплея)",
    "exampleTwoOverlay": "Пример 2 (Накладка Дисплей)",
    "requireMessage": "Это обычай требуется сообщение.",
    "magicMessage": "\"Пожалуйста, \" использовать волшебное слово.",
    "exampleOneDesc": "Вы можете использовать \" свойство Проверка \", чтобы дать свои компоненты functions.All валидации, которые распространяется \"ValidationComponent \" будет автоматически принимать и выполнять их на каждом run.Either наши предопределенные валидаций в \"InputValidations \" или ваш бренд новый функции проверки могут быть использованы.",
    "exampleWwoDesc": "Мы поддерживаем два типа опции для отображения сообщений о проверке. Это определяется \"validationDisplay \" property.You может обеспечить validationDisplay свойство через поле ввода или с помощью \"DataForm \" (перешлет это свойство ко всем входам).",
    "descOne": "Как вы можете видеть из свойства проверки исходного кода принимает карту валидаций. Он также поддерживает параметрические функции проверки с пользовательских шаблонов сообщений. Для бывших. \" MINLENGTH \" представляет собой объект с заранее определенной функции (\"InputValidations \"). Мы использовали \"minLength.args \" для прохождения требуемых параметров, минимальная длина в этом случае. Кроме того, вы можете определить пользовательские шаблоны сообщений с \"minLength.message.args \". Вы можете дать вашу функцию проверки непосредственно через  параметр \"minLength.func \", для примера, посмотрите на пожалуйста :)",
    "descTwo": "\"InputValidations \" одноточечно класс, который имеет предопределенные валидацию и Регистери для новых функций. -Регистрация Проверки имеет важное значение для многократного использования функций и делает его доступным из любой точки планеты. Кроме того, вы должны знать, что \"DataForm \" использует эти \"InputValidations \" для поиска имен проверки из данного DataModel JSON."
  },
  "model.ModelSapmle": {
    "paragraphOne": "Вы можете использовать модели как для представления данных с помощью \"DataGrid \" или \"DataForm \". На этой странице будет определять использование компонента.",
    "paragraphTwo": "Модель является \"JSON \" представление нашей точки привязки. Типы, имена столбцов реквизита все детали будут определены внутри json.It будут нужны некоторые зарезервированные поля для идентификации точки привязки, все остальные поля будут пересылаться на выбранном компоненте, как props.If вы посмотрите на наших примерах вы можете увидеть, что модели определяется в виде файла в формате JSON и загружается через \"импорт \" 'ами.",
    "typesStrong": "Типы",
    "paragraphThree": "Модель поддерживает различные типов, которые перечислены в таблице ниже.",
    "type": "Тип",
    "component": "Компонент",
    "exampleOne": "Пример 1",
    "exampleParagraph": "Здесь вы можете найти пример модели ниже.",
    "exampleDesc": "Это в основном массив полей, которые вы хотите видеть. \"Типа \" имеет важное значение для определения того, какой компонент для использования. Другие поля как \"Имя \", \"этикетка \", \"валидаций \" ... являются входными компонент \"подпорки \"."
  },
  "docs.DocList": {
    "validationDesc": "Проверка является встроенная утилита, которая может быть использована непосредственно, либо с помощью модели DataForm",
    "modelDesc": "Модели представляют собой механизм определения данных, который используется DataGrid и DataForm",
    "ajaxDesc": "Выполнить запрос AJAX. (Да, это все)",
    "remoteEndPointDesc": "Вызов API-интерфейсы Исли с помощью запросов AJAX под одной крышей. Простая настройка и использование.",
    "storeDesc": "Магазин это самый простой способ для обработки ресурсов (JSON данных). Поддерживает необходимые операции для манипулирования данными. Вы всегда можете расширить больше.",
    "inputAddOnDesc": "Добавление дополнительных компонентов (иконки, тексты и т.д.) на входах.",
    "i18nDesc": "Поддержка нескольких языков",
    "toastDesc": "Тост это сообщение, показывающее полезность. Помогает разработчику, чтобы показать тост сообщения Исли и стандартизированным способом.",
    "onChangeDesc": "Эта страница будет объяснить детали метода OnChange входных компонентов"
  },
  "docs.Docs": {
    "title": "документы",
    "header": "Здесь вы можете найти документацию по компонентам.",
    "search": "Поиск"
  },
  "components.ComponentList": {
    "textInputDesc": " это поле ввода по умолчанию для сбора текстовых данных одной строки из формы.",
    "textAreaDesc": " является большое поле ввода для сбора нескольких линий текстовых данных из формы.",
    "passwordInputDesc": " это поле ввода по умолчанию для сбора данных паролей от формы.",
    "decimalInputDesc": " это поле ввода для сбора десятичных данных.",
    "numericInputDesc": " это поле ввода для сбора числовых данных.",
    "moneyInputDesc": " это поле ввода для сбора денежных данных.",
    "selectInputDesc": " это поле ввода, чтобы обеспечить элементы выбора из заданных элементов массива",
    "checkInputDesc": " это поле ввода для обеспечения проверки данный пункт",
    "radioInputDesc": " это поле ввода, чтобы обеспечить проверку заданного item.You не может мульти проверка.",
    "dateInputDesc": " это поле ввода для сбора данных даты",
    "datePickerDesc": " это поле ввода для сбора данных даты",
    "screenKeyboardDesc": "является компонентом, который отображает виртуальную клавиатуру на экране.",
    "htmlEditorDesc": " это поле ввода для сбора данных HTML (форматированный текст).",
    "fileUploadInputDesc": " является загрузки файлов компонентов",
    "button": " является смарт-компонент, кнопка, которая предотвращает несколько кликов по АЯКС вызова",
    "dataGridDesc": " является смарт-сетки с фильтром, сортировки, возможности поиска.",
    "dataFormDesc": " является одной из форм компонент, который генерируется из модели для создания или редактирования данных",
    "dataFilterDesc": " является компонентом фильтрации, который использует модель для создания фильтров",
    "modalDataFormDesc": " является модальный компонент, который открывает DataForm внутри.",
    "wizardDesc": " является компонентом многостраничный мастер. Вы можете использовать этот компонент для навигации пользователя через длинные формы шаг за шагом / процессов. Он собирает все данные из шагов, и дает вам на этапе финишной.",
    "checkTreeDesc": "является компонентом многостраничный мастер. Вы можете использовать этот компонент для навигации пользователя через длинные формы шаг за шагом / процессов. Он собирает все данные из шагов, и дает вам на этапе финишной....",
    "sideMenuDesc": " является компонентом меню, которое будет помещен на стороне исправлять видовом",
    "stackLayoutDesc": " является одним из компонентов макет, который поддерживает список и просмотр миниатюр.",
    "dragDropLayoutDesc": " является одним из компонентов макета, который обеспечивает метод перетаскивания мышью и нажмите на события слоя.",
    "faIconDesc": " является составной оболочкой для шрифтов-иконок удивительным.",
    "ratingDesc": " композиция, которая предлагает градацию с шрифтами удивительным иконки.",
    "sliderDesc": " используется для выбора диапазона значений или одно значение, сдвинув.",
    "lazyImageDesc": "является компонентом для загрузки изображений с помощью AJAX.",
    "progressDesc": " является компонентом индикатора для тяжелого Аякса загруженного сайта",
    "progressSubStartDesc": " Запускает индикатор прогресса в верхней части страницы",
    "progressSubCompleteDesc": " Завершает индикатор прогресса в верхней части страницы",
    "progressSubConfigureDesc": "Настройка индикатора",
    "progressBarDesc": "является компонентом индикатора для тяжелого Аякса загруженного сайта",
    "countDownDesc": "является компонентом для обратного отсчета от заданного значения",
    "notificationDesc": "является компонент уведомления с общего количества и всплывающего списка",
    "toastDesc": "это тостер сообщение, показывающее полезность. Помогает разработчикам показать тостер сообщения Исли и стандартизированным способом",
    "reCaptchaDesc": "является CAPTCHA на основе типа система, предназначенная для установления, что пользователь компьютера является человек (как правило, для того, чтобы защитить сайты от ботов) и, в то же время, помощь в оцифровке книг",
    "googleMapDesc": "является составной оболочкой для GoogleMaps API",
    "areaChartDesc": "отображает в графическом виде количественных данных. Он основан на линейной диаграмме. Область между осью и линией обычно подчеркнуты цвета, текстуры и штриховкой. Обычно сравнить с площадью диаграммы двух или более величин.",
    "barChartDesc": "гистограмма или гистограмма диаграмма или график, который представляет собой сгруппированные данные с прямоугольником | прямоугольные бруски с длинами, пропорциональными значениями, которые они представляют",
    "lineChartDesc": "линейный график или линейный график представляет собой тип диаграммы, который отображает информацию в виде последовательности точек данных, называемых маркеров, соединенных прямолинейным отрезком",
    "pieChartDesc": "круговая диаграмма (или круговая диаграмма) представляет собой круговой статистический графический, который разделен на дольки, чтобы проиллюстрировать числовой proportio",
    "scatterChartDesc": "диаграмма рассе (также называемый точечный график, график рассеяния, Scattergram или диаграмму разброса) представляет собой тип графика или математической схеме с использованием декартовых координат для отображения значений обычно от двух переменных для набора данных",
    "iconizerDesc": " преобразует данный массив социальных связей для связи с социальными иконки",
    "sidePanelDesc": " левая или правая панель, которая скользит в / из"
  },
  "components.Components": {
    "title": "Компоненты",
    "description": "Здесь вы можете найти образцы и виды использования компонентов.",
    "search": "Поиск",
    "functional": "функциональная",
    "layout": "макет",
    "inputs": "входные",
    "charts": "Графики",
    "extras": "Разное"
  },
  "components.Renderer": {
    "example": "Примеры",
    "propsBlockHeader": "Реквизит",
    "methodBlockHeader": "методы",
    "propsTableFieldOne": "имя",
    "propsTableFieldTwo": "Тип",
    "propsTableFieldThree": "По умолчанию",
    "propsTableFieldFour": "необходимые",
    "propsTableFieldFive": "Описание",
    "methodsTableFieldOne": "имя",
    "methodsTableFieldTwo": "Возвращает",
    "methodsTableFieldThree": "Описание",
    "required": "необходимые"
  },
  "datagrid.DataGridSample": {
    "gridOne": "DataGrid (CRUD панель инструментов)",
    "gridTwo": "DataGrid (пользовательской панели инструментов и Pagination)",
    "gridThree": "DataGrid (Пользовательские Cell Renderer)"
  },
  "inputs.ScreenKeyboardSample": {
    "keyboardOne": "Экранная клавиатура с языком клавиатуры",
    "keyboardTwo": "Клавиатура с цифровой клавиатурой",
    "keyboardThree": "Можно использовать без ввода данных (возврат только Щелкнул ключ)",
    "clickedKey": "Щелкнул ключ : "
  },
  "datafilter.DataFilterSample": {
    "output": "выходной массив"
  },
  "rating.RatingSample": {
    "ratingOne": "с размерами по умолчанию и текущее значение",
    "ratingTwo": "с различными размерами и инвалидов",
    "ratingThree": "с различными значками",
    "ratingFour": "образец по умолчанию"
  },
  "slider.SliderSample": {
    "sliderOne": "С помощью значения по умолчанию",
    "sliderTwo": "С мин-макс значения и шаг за шагом",
    "sliderThree": "С шагом флоат",
    "sliderFour": "С инвалидами",
    "sliderFive": "С диапазоном",
    "sliderSix": "С диапазоном и шаг за шагом",
    "sliderSeven": "С дальностью и флоат шагом",
    "sliderEight": "С диапазоном и инвалидов"
  },
  "extras.Iconizer": {
    "supports": "опоры"
  },
  "layout.SidePanel": {
    "toggleLeft": "тумблер левая панель",
    "toggleRight": "переключить правую панель"
  }
}